FROM python:3.13-alpine

ENV AGENT_HOST=0.0.0.0
ENV AGENT_PORT=5000

RUN apk update && apk add --no-cache \
    curl \
    nginx \
    redis \
    supervisor \
    openssl \
    bash \
    docker-cli


# Set a non-root user
RUN addgroup -S appgroup && addgroup -S docker && \
    adduser -S appuser -G appgroup && \
    adduser appuser docker && \
    adduser appuser root


WORKDIR /app

# Install python dependencies
COPY ./pyproject.toml ./poetry.lock /app/
RUN pip install poetry \
    && poetry config virtualenvs.create false \
    && poetry install --only main --no-root

# Copy the rest of the code
#COPY ./src /app/src
#COPY ./bin /app/bin
#COPY ./agent.py /app/agent.py
#COPY ./celery_worker.sh /app/celery_worker.sh

# Configure Nginx
COPY ./docker/alpine/nginx/nginx.conf /etc/nginx/nginx.conf
COPY ./docker/nginx/site.default.conf /etc/nginx/http.d/default.conf

# Configure Supervisor
COPY docker/alpine/supervisor/supervisord.conf /etc/supervisord.conf
COPY docker/supervisor/celery_worker.ini /etc/supervisor.d/celery_worker.ini
COPY docker/supervisor/redis.ini /etc/supervisor.d/redis.ini
COPY docker/supervisor/nginx.ini /etc/supervisor.d/nginx.ini
COPY docker/supervisor/app.ini /etc/supervisor.d/app.ini


#ENTRYPOINT ["supervisord", "--nodaemon", "--configuration", "/etc/supervisord.conf"]
COPY ./docker/entrypoint-alpine.sh /entrypoint.sh
RUN ["chmod", "+x", "/entrypoint.sh"]
ENTRYPOINT ["/entrypoint.sh"]
CMD ["nginx"]
#CMD ["supervisord", "--nodaemon", "--configuration", "/etc/supervisord.conf"]
#CMD ["nginx", "-g", "daemon off;"]


# Change ownership to non-root user
RUN chown -R appuser:appgroup /run
RUN chown -R appuser:appgroup /var/run

RUN touch /var/log/supervisord.log && touch /run/supervisord.pid && touch /run/supervisord.sock && \
    mkdir -p /var/log/supervisor && \
    chown -R appuser:appgroup /etc/supervisord.conf /etc/supervisor.d /run/supervisord.pid /run/supervisord.sock && \
    chown -R appuser:appgroup /var/log/supervisord.log /var/log/supervisor

RUN mkdir -p /etc/nginx/ssl/ &&  \
    touch /var/lib/nginx/logs/error.log && \
    touch /var/lib/nginx/logs/access.log && \
    chown -R appuser:appgroup /etc/nginx/ssl/ && \
    chown -R appuser:appgroup /var/lib/nginx /var/lib/nginx/logs /run/nginx && \
    chown -R appuser:appgroup /var/lib/nginx/logs/error.log && \
    chown -R appuser:appgroup /var/lib/nginx/logs/access.log

RUN mkdir -p /var/lib/redis && touch /var/log/redis/redis.log && touch /run/redis/redis.pid && \
    chown -R appuser:appgroup /var/lib/redis && \
    chown -R appuser:appgroup /var/log/redis/redis.log /run/redis/redis.pid

USER appuser

# Health check
HEALTHCHECK --interval=60s --timeout=3s --retries=3 \
 CMD curl --fail http://localhost:${AGENT_PORT}/ || exit 1


EXPOSE ${AGENT_PORT}
EXPOSE 3080
EXPOSE 3443
